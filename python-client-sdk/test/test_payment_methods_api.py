# coding: utf-8

"""
    Hyperswitch - API Documentation

     ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 

    The version of the OpenAPI document: 0.1.0
    Contact: hyperswitch@juspay.in
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from hyperswitch.api.payment_methods_api import PaymentMethodsApi


class TestPaymentMethodsApi(unittest.TestCase):
    """PaymentMethodsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = PaymentMethodsApi()

    def tearDown(self) -> None:
        pass

    def test_create_a_payment_method(self) -> None:
        """Test case for create_a_payment_method

        PaymentMethods - Create
        """
        pass

    def test_delete_a_payment_method(self) -> None:
        """Test case for delete_a_payment_method

        Payment Method - Delete
        """
        pass

    def test_list_all_payment_methods_for_a_customer(self) -> None:
        """Test case for list_all_payment_methods_for_a_customer

        List payment methods for a Customer
        """
        pass

    def test_list_all_payment_methods_for_a_customer_0(self) -> None:
        """Test case for list_all_payment_methods_for_a_customer_0

        List customer saved payment methods for a Payment
        """
        pass

    def test_list_all_payment_methods_for_a_merchant(self) -> None:
        """Test case for list_all_payment_methods_for_a_merchant

        List payment methods for a Merchant
        """
        pass

    def test_retrieve_a_payment_method(self) -> None:
        """Test case for retrieve_a_payment_method

        Payment Method - Retrieve
        """
        pass

    def test_set_the_payment_method_as_default(self) -> None:
        """Test case for set_the_payment_method_as_default

        Payment Method - Set Default Payment Method for Customer
        """
        pass

    def test_update_a_payment_method(self) -> None:
        """Test case for update_a_payment_method

        Payment Method - Update
        """
        pass


if __name__ == '__main__':
    unittest.main()
