[package]
name = "sample"
version = "0.1.0"
edition.workspace = true
rust-version.workspace = true
license.workspace = true

[features]
default = ["olap", "oltp"]
v1 = ["diesel_models/v1", "hyperswitch_domain_models/v1", "common_utils/v1"]
v2 = []
customer_v2 = []
olap = ["hyperswitch_domain_models/olap"]
oltp = []
payment_methods_v2 = []
email = []

[dependencies]
# Third party crates
error-stack = "0.4.1"
async-trait = "0.1.79"
rustc-hash = "1.1.0"
serde = { version = "1.0.197", features = ["derive"] }
serde_json = "1.0.115"
once_cell = "1.19.0"
reqwest = { version = "0.11.27", features = ["json", "rustls-tls", "gzip", "multipart"] }
rdkafka = "0.36.2"
# check all features are required?
time = { version = "0.3.35", features = ["serde", "serde-well-known", "std", "parsing", "serde-human-readable"] }
thiserror = "1.0.58"
dyn-clone = "1.0.17"
validator = "0.17.0"

# First party crates
# api_models = { version = "0.1.0", path = "../api_models", features = ["v1"], default-features = false }
common_utils = { version = "0.1.0", path = "../common_utils" }
common_enums = { version = "0.1.0", path = "../common_enums" }
diesel_models = { version = "0.1.0", path = "../diesel_models", default-features = false }
external_services = { version = "0.1.0", path = "../external_services" }
# storage_impl = { version = "0.1.0", path = "../storage_impl", features=["v1"], default-features = false }
hyperswitch_domain_models = { version = "0.1.0", path = "../hyperswitch_domain_models", default-features = false}
# scheduler = { version = "0.1.0", path = "../scheduler", default-features = false}
redis_interface = { version = "0.1.0", path = "../redis_interface" }
router_derive = { version = "0.1.0", path = "../router_derive" }
router_env = { version = "0.1.0", path = "../router_env"}
masking = { version = "0.1.0", path = "../masking" }

[lints]
workspace = true
